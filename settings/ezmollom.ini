<?php /* #?ini charset="utf-8"?

[MollomSettings]
#Handler: eZMollomXMLRPCLoader or eZMollomRestLoader. eZMollomRestLoader is beta.
Handler=eZMollomXMLRPCLoader

# Checks: An indexed array of strings denoting the checks to perform, one or more.
checks[]
checks[]=spam
checks[]=quality
checks[]=profanity
checks[]=language
checks[]=sentiment

# Strictness: A string denoting the strictness of Mollom checks to perform
# one of 'strict', 'normal', or 'relaxed'. 
strictness=normal

# ProfanityMax: a floating point value with a precision of 2, ranging between 0.00 and 1.00; 
# whereas 0.00 denotes 0% profanity and 1.00 denotes 100% profanity. Leave empty to skip check.
# Only returned if 'profanity' has been included 'checks' above.
profanityMax=0.00

# QualityMin: A floating point value with a precision of 2, ranging  between 0.00 and 1.00; 
# whereas 0.00 denotes poor quality and 1.00 high quality. Leave empty to skip check.
# Only returned if 'quality' has been included 'checks' above.
qualityMin=0.50

# SentimentMin: A floating point value with a precision of 2, ranging between 0.00 and 1.00; 
# whereas 0.00 denotes bad sentiment and 1.00 good sentiment.
# Only returned if 'sentiment' has been included 'checks' above.
sentimentMin=0.50

# The 'unsure', 'ratelimit' and 'honeypot' are available for the REST interface only

# Unsure: Integer denoting whether a "unsure" response should be allowed
# (1) for the 'spam' check (which should lead to CAPTCHA) or not (0).
unsure=1

# RateLimit: Seconds that must have passed by for the same author to post again. Only available for REST API
rateLimit=120

# The value of a client-side honeypot form element, if non-empty. Only available for REST API.
honeypot=

# The parameters 'reputation' and 'classifier' are available for the XML-RPC interface only

#Reputation
#captcha-blocking-normal
#captcha-blocking-relax
#captcha-blocking-strict
#nocaptcha-blocking-normal
#nocaptcha-blocking-relax
#nocaptcha-blocking-strict
#captcha-nonblocking-normal
#captcha-nonblocking-relax
#captcha-nonblocking-strict
#captcha-blocking-repeated
reputation=

#Classifier
classifier=

[InformationExtractorSettings]
# Lists all classes that should make use of the Mollom service
ExtractableClasses[]=comment
ExtractableClasses[]=feedback_form
#ExtractableClasses[]=forum_topic

[comment_MollomSettings]
checks[]
checks[]=spam
#checks[]=quality
#checks[]=profanity
#checks[]=sentiment
strictness=normal
# Maps specific content class attributes identifiers to one of the following Mollom fields:
# postBody: The body of the content. If the content consists of multiple
# fields, concatenate them into one postBody string, separated by " \n" (space and line-feed).
# authorName: The (real) name of the content author.
# authorUrl: The homepage/website URL of the content author.
# authorMail: The e-mail address of the content author.
# authorIp: The IP address of the content author.
# authorId: The local user ID on the client site of the content author.
# authorOpenid: An indexed array of Open IDs of the content author.
# Currently supports the following datatypes: author, url, email, text line, text block, xml block 
postTitle=subject
postBody=message
authorName=author

#Please note: captcha functionality is not supported for forms.
[feedback_form_MollomSettings]
checks[]
checks[]=spam
postTitle=subject
postBody=message
authorName=sender_name
authorMail=email


#Settings for the eZ Comments extension
#Please note: captcha functionality is not supported for eZ Comments.
[ezcomments_MollomSettings]
checks[]
checks[]=spam
checks[]=profanity
# No need to map fields here.

*/ ?>